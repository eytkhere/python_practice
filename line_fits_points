import numpy as np
import matplotlib.pyplot as plt

x = [6561,7225,9216,18769,29929,45796]
y = [107.73,110.5,106.56,112.34,117.64,121.98]
"""
plt.plot(x, y)
plt.xlabel("x - axis")
plt.ylabel("y - axis")

plt.title("Graph")
np.polyfit(x, y, rcond=None, full=False)
plt.show()
"""

from numpy import arange
from scipy.optimize import curve_fit
from matplotlib import pyplot


# define the true objective function
def objective(x, a, b, c):
    return a * x + b * x ** 2 + c

# curve fit
popt, _ = curve_fit(objective, x, y)
# summarize the parameter values
a, b, c = popt
print('y = %.5f * x + %.5f * x^2 + %.5f' % (a, b, c))
# plot input vs output
pyplot.scatter(x, y)
# define a sequence of inputs between the smallest and largest known inputs
x_line = arange(min(x), max(x), 1)
# calculate the output for the range
y_line = objective(x_line, a, b, c)
# create a line plot for the mapping function
pyplot.plot(x_line, y_line, '--', color='red')
#print(x_line, y_line)
pyplot.title('y = %.5f * x + %.5f * x^2 + %.5f' % (a, b, c))
pyplot.show()
